Aggiungere folder "models" con il modello di IA sotto C

Copiare Stations Table ( Aggiungere type ENUM : mbj, colonna config JSON e plc JSON )

CONTROLLARE BENE LE IMMAGINI E I FILE JSON, CREDO SIANO PIÃ¹ GIUSTI QUELLI SUL PC 3SUN
Cambiare nome cartelle immagini da M308 a MIN01 e da M309 a MIN02
Cambiare nome Cartella da "IX-Monitor" a "PMS"

############################

CREATE TABLE photos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    photo LONGBLOB NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


##########################
Per migrare le photos nella nuova tabella:

# CREARE LA COLONNA photo_id
ALTER TABLE object_defects ADD COLUMN photo_id INT NULL;


# USARE SOFTWARE: migrate_mysql.exe

# MODIFICARE LA TABELLA
ALTER TABLE object_defects
  DROP COLUMN photo,
  ADD CONSTRAINT fk_object_photos
    FOREIGN KEY (photo_id)
    REFERENCES photos(id)
    ON DELETE SET NULL;


#################################
Per migrare photos dei warning stringatrice nella nuova tabella : ( non migriamo le photo, tanto non le avranno scattate)

ALTER TABLE stringatrice_warnings
  DROP COLUMN photo,
  ADD COLUMN photo_id INT NULL,
  ADD CONSTRAINT fk_warning_photo
    FOREIGN KEY (photo_id)
    REFERENCES photos(id)
    ON DELETE SET NULL;


###################
TO MAKE DATABASE BETTER

CREATE INDEX idx_prod_time ON productions(start_time, end_time);

CREATE INDEX idx_prod_obj_last ON productions(object_id, last_station_id);

#################################
Copiare NGINX config file ( usare PMS al posto di IX-Monitor e aggiunta porta 8053)

###########################
Create visual_table for the Visual Managment:
CREATE TABLE visual_summary (
    id INT AUTO_INCREMENT PRIMARY KEY,

    zone VARCHAR(50) NOT NULL,  -- e.g. "Line1", "Line2", "QG Area"
    view_type ENUM('1_station', '2_station', '5_station') NOT NULL,
    station_1_name VARCHAR(50),
    station_2_name VARCHAR(50),

    timestamp DATETIME NOT NULL,

    -- ðŸŸ¦ Station 1 metrics
    station_1_in INT,
    station_1_out_ng INT,
    station_1_yield FLOAT,
    station_1_yield_shift_1 FLOAT,
    station_1_yield_shift_2 FLOAT,
    station_1_yield_shift_3 FLOAT,
    station_1_yield_last_8_hour_json JSON,

    -- ðŸŸ¦ Station 2 metrics
    station_2_in INT,
    station_2_out_ng INT,
    station_2_yield FLOAT,
    station_2_yield_shift_1 FLOAT,
    station_2_yield_shift_2 FLOAT,
    station_2_yield_shift_3 FLOAT,
    station_2_yield_last_8_hour_json JSON,

    -- ðŸŸ§ Aggregated metrics
    stations_throughput_shift_1 INT,
    stations_throughput_shift_2 INT,
    stations_throughput_shift_3 INT,
    stations_throughput_last_8_hour_json JSON,

    -- ðŸ”’ Unique + Performance Indexes
    UNIQUE KEY uniq_zone (zone),
    INDEX (view_type),
    INDEX (timestamp)
);


############# CREATE STOPS table:

CREATE TABLE stops (
    id INT AUTO_INCREMENT PRIMARY KEY,

    station_id INT NOT NULL,
    start_time DATETIME NOT NULL,
    end_time DATETIME,
    stop_time INT GENERATED ALWAYS AS (TIMESTAMPDIFF(SECOND, start_time, end_time)) STORED,

    operator_id VARCHAR(64),
    type ENUM('ESCALATION', 'STOP', 'MAINTENANCE', 'QUALITY') NOT NULL,
    reason VARCHAR(256),

    status ENUM('OPEN', 'SHIFT_MANAGER', 'HEAD_OF_PRODUCTION', 'MAINTENANCE_TEAM', 'CLOSED') NOT NULL,

    linked_production_id INT,

    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    INDEX idx_station_time (station_id, start_time),
    INDEX idx_type (type),
    INDEX idx_operator (operator_id),
    INDEX idx_production (linked_production_id),
    INDEX idx_status (status)
);


############# CREATE STOPS_LEVELS table:

CREATE TABLE stop_status_changes (
    id INT AUTO_INCREMENT PRIMARY KEY,

    stop_id INT NOT NULL,
    status ENUM('OPEN', 'SHIFT_MANAGER', 'HEAD_OF_PRODUCTION', 'MAINTENANCE_TEAM', 'CLOSED') NOT NULL,
    changed_at DATETIME NOT NULL,
    operator_id VARCHAR(64),

    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (stop_id) REFERENCES stops(id),

    INDEX idx_stop_changed_at (stop_id, changed_at),
    INDEX idx_status (status)
);
